@page "/DataView"
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<YourDbContext> DbContextFactory
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h1>Data View</h1>

@if (errorMessage != null)
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

@if (Employees == null)
{
    <p><em>Loading...</em></p>
}
else if (!Employees.Any())
{
    <p>No employee records found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Work ID</th>
                <th>Name</th>
                <th>Family Name</th>
                <th>User Page</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Employees)
            {
                <tr>
                    <td>@employee.WorkID</td>
                    <td>@employee.Name</td>
                    <td>@employee.FamilyName</td>
                    <td>
                        <a href="@employee.UserPage" target="_blank">View</a>
                    </td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="() => NavigateToEdit(employee.ID)">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Employee> Employees = new();
    private string? errorMessage;
    private bool isLoaded;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            using var context = DbContextFactory.CreateDbContext();
            Employees = await context.Employees.ToListAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading employees: {ex.Message}";
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && errorMessage != null)
        {
            await JSRuntime.InvokeVoidAsync("alert", errorMessage);
        }
    }

    private void NavigateToEdit(int employeeId)
    {
        Navigation.NavigateTo($"/edit/{employeeId}");
    }
}
